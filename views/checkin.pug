.container  
  h3 Scan QRCode
    br
    br
    .form-group
      select.form-control(id="cam-list")   
      div(class ="qr-container" style='text-align: center')
          video(playsinline autoplay muted width=400 height=400 id="localVideo")

      script(src="https://webrtc.github.io/adapter/adapter-latest.js")
      script(src="javascripts/qr-scanner.umd.min.js")
      script. 
        const localVideo = document.getElementById("localVideo");
        const camList = document.getElementById('cam-list');
        navigator.getUserMedia(
          { video: true, audio: false },
          (stream) => {
            if (localVideo) {
              localVideo.srcObject = stream;
              const videoTracks =  stream.getVideoTracks();
              const videoTrackSettings = videoTracks[0].getSettings();
              
              const canvas = document.createElement("canvas");
              canvas.height = videoTrackSettings.height;
              canvas.width = videoTrackSettings.width;
              
              const canvasContext = canvas.getContext("2d");

              canvasContext.drawImage(localVideo, 0, 0, canvas.width, canvas.height);
              const imageData = canvasContext.getImageData(0, 0, canvas.width, canvas.height);
              
              function setResult(label, result) {
                  label.value = result.data;
                  if(label.value != "dummy"){
                    scanner.stop()
                    document.qrForm.submit()
                  }

              }
              qrdata = document.getElementById('QRScanData')
              // ####### Web Cam Scanning #######

              const scanner = new QrScanner(localVideo, result => setResult(qrdata, result), {
                  onDecodeError: error => {
                      qrdata.textContent = error;
                      qrdata.style.color = 'inherit';
                  },
                  highlightScanRegion: true,
                  highlightCodeOutline: true,
              });
              //- scanner.setCamera()
              
              scanner.start().then(() => {
                QrScanner.listCameras(true).then(cameras => cameras.forEach(camera => {
                    const option = document.createElement('option');
                    option.value = camera.id;
                    option.text = camera.label;
                    camList.add(option);
                }));
              });

              //- scanner.setCamera()

              camList.addEventListener('change', event => {
                scanner.setCamera(event.target.value);
              });
              //- const qrScanner = new QrScanner(localVideo, result => {
              //-   qrdata = document.getElementById('QRScanData')
              //-   qrdata.value = result;
              //-   if(qrdata.value != "dummy"){
              //-     document.qrForm.submit()
              //-   }
              //- });
              //- qrScanner.start().then(()=>{
              //-   QrScanner.listCameras(true).then(cameras => cameras.forEach(camera => {
              //-     const option = document.createElement('option');
              //-     option.value = camera.id;
              //-     option.text = camera.label;
              //-     camList.add(option);
              //-    }));
              //- })
            }
          },
          (error) => {
            console.warn(error.message);
          }
        );
      |