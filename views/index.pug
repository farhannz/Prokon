extends layout

block content
  - var debug=true;
  h1= title
  p Welcome to #{title}
  
  p !{reqBody}
  if debug 
    p #{textDebug}
  h1 Admin 
  |
  form(action="/api/generate", method="POST")
    p
      | Generate QR Code 
      br 
      br 
      label(for="Angkatan")   Angkatan  :   
      select(name="Angkatan",id="Angkatan")
        each angkatan in angkatanData
          option=angkatan
      label(for="Pilihan")  Pilihan  :    

      select(name="Pilihan",id="Pilihan")  
        each pilihan in pilihanData 
          option=pilihan
      label(for="Kelas")  Kelas  :    
      select(name="Kelas",id="Kelas")
        each kelas in kelasData 
          option=kelas
      |

      p(id="gabunganKelas")
    script.
    
      var gabungan = document.getElementById('gabunganKelas')

      var angkatanData = document.getElementById('Angkatan');
      var angkatanSelected = angkatanData.value;
      var pilihanData = document.getElementById('Pilihan'); 
      var pilihanSelected = pilihanData.value;
      var kelasData = document.getElementById('Kelas'); 
      var kelasSelected = kelasData.value;

      angkatanData.addEventListener('change', function(event) {
        angkatanSelected = angkatanData.value;
        gabungan.innerHTML = angkatanSelected + " " + pilihanSelected + " " + kelasSelected;
      })
      pilihanData.addEventListener('change', function(event) {
        pilihanSelected = pilihanData.value;
        gabungan.innerHTML = angkatanSelected + " " + pilihanSelected + " " + kelasSelected;
      })

      kelasData.addEventListener('change', function(event) {
        kelasSelected = kelasData.value;
        gabungan.innerHTML = angkatanSelected + " " + pilihanSelected + " " + kelasSelected;
      })

      gabungan.innerHTML = angkatanSelected + " " + pilihanSelected + " " + kelasSelected;
    input(value='Generate', type='submit')
  |
  br
  h1 Student
  |
  h2 Profile 
  label(for="name")   Nama  :   
  input(type="text", disabled, value = "John Doe") 
  br
  br
  label(for="name")   Kelas  :   
  input(type="text", disabled, value = _kelas) 
  
  h2 Scan QRCode
  br
  br
  form(action="/api/scan" method ="POST" name="qrForm")
    input(type="text" id="QRScanData" name="QRScanData", value ="dummy", hidden)
    input(value='QRScan', type='submit', hidden)

  select(id="cam-list")   
  div(class ="qr-container")
      video(playsinline autoplay muted width=400 height=400 id="localVideo")

  script(src="https://webrtc.github.io/adapter/adapter-latest.js")
  script(src="javascripts/qr-scanner.umd.min.js")
  script. 
    const localVideo = document.getElementById("localVideo");
    const camList = document.getElementById('cam-list');
    navigator.getUserMedia(
      { video: true, audio: false },
      (stream) => {
        if (localVideo) {
          localVideo.srcObject = stream;
          const videoTracks =  stream.getVideoTracks();
          const videoTrackSettings = videoTracks[0].getSettings();
          
          const canvas = document.createElement("canvas");
          canvas.height = videoTrackSettings.height;
          canvas.width = videoTrackSettings.width;
          
          const canvasContext = canvas.getContext("2d");

          canvasContext.drawImage(localVideo, 0, 0, canvas.width, canvas.height);
          const imageData = canvasContext.getImageData(0, 0, canvas.width, canvas.height);
          
          function setResult(label, result) {
              label.value = result.data;
              if(label.value != "dummy"){
                scanner.stop()
                document.qrForm.submit()
              }

          }
          qrdata = document.getElementById('QRScanData')
          // ####### Web Cam Scanning #######

          const scanner = new QrScanner(localVideo, result => setResult(qrdata, result), {
              onDecodeError: error => {
                  qrdata.textContent = error;
                  qrdata.style.color = 'inherit';
              },
              highlightScanRegion: true,
              highlightCodeOutline: true,
          });

          
          scanner.start().then(() => {
            QrScanner.listCameras(true).then(cameras => cameras.forEach(camera => {
                const option = document.createElement('option');
                option.value = camera.id;
                option.text = camera.label;
                camList.add(option);
            }));
          });

          camList.addEventListener('change', event => {
            scanner.setCamera(event.target.value);
          });
          //- const qrScanner = new QrScanner(localVideo, result => {
          //-   qrdata = document.getElementById('QRScanData')
          //-   qrdata.value = result;
          //-   if(qrdata.value != "dummy"){
          //-     document.qrForm.submit()
          //-   }
          //- });
          //- qrScanner.start().then(()=>{
          //-   QrScanner.listCameras(true).then(cameras => cameras.forEach(camera => {
          //-     const option = document.createElement('option');
          //-     option.value = camera.id;
          //-     option.text = camera.label;
          //-     camList.add(option);
          //-    }));
          //- })
        }
      },
      (error) => {
        console.warn(error.message);
      }
    );
  |
  //-  DEBUG QR CODE
  if debug
    h3 Get QRCode
    |
    form(action="/", method="GET")
      label(for="Angkatan")   Angkatan  :   
      select(name="Angkatan",id="Angkatan")
        each angkatan in angkatanData
          option=angkatan
      label(for="Pilihan")  Pilihan  :    

      select(name="Pilihan",id="Pilihan")  
        each pilihan in pilihanData 
          option=pilihan
      label(for="Kelas")  Kelas  :    
      select(name="Kelas",id="Kelas")
        each kelas in kelasData 
          option=kelas
      br
      br
      input(value='Get QR', type='submit')
  |
  br
  div(class="qr") Generated QR
  |
  br
  img(src = qrcode, width = 300, height = 300)
  |
  |
